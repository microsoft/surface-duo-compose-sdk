/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

apply plugin: 'kotlin-android'
apply plugin: 'com.android.library'

//Artifact publication data
ext {
    PUBLISH_GROUP_ID = 'com.microsoft.device.dualscreen'
    PUBLISH_ARTIFACT_ID = 'draganddrop'
    LIBRARY_DESCRIPTION = 'DraAndDrop Compose library'
    LIBRARY_VERSION = rootProject.ext.dragAndDopVersionName
}
apply from: "${rootProject.projectDir}/publishing.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.dragAndDopVersionCode
        versionName rootProject.ext.dragAndDopVersionName
        buildConfigField("int", "VERSION_CODE", "${defaultConfig.versionCode}")
        buildConfigField("String", "VERSION_NAME", "\"${defaultConfig.versionName}\"")


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LGPL2.1', 'META-INF/AL2.0']
        }
    }

}

dependencies {
    implementation kotlinDependencies.kotlinStdlib

    implementation androidxDependencies.ktxCore
    implementation androidxDependencies.appCompat

    implementation composeDependencies.composeUI
    implementation composeDependencies.composeMaterial
    implementation composeDependencies.composeUITooling
    implementation composeDependencies.activityCompose

    testImplementation testDependencies.androidxTestCore

    androidTestImplementation testDependencies.androidxTestCore
    androidTestImplementation testDependencies.androidxTestRules
    androidTestImplementation testDependencies.androidxTestRunner
    androidTestImplementation testDependencies.composeUITest
    androidTestImplementation testDependencies.composeJunit

    debugImplementation testDependencies.composeUITestManifest
}